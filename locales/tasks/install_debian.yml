---
- name: preconfigure tzdata
  debconf:
    name: tzdata
    question: "tzdata/{{ item.question }}"
    value: "{{ item.values }}"
    vtype: "{{ item.type }}"
  with_items:
      - { question: "Zones/{{ locale_timezone_continent|default('Etc') }}", values: "{{ locale_timezone_city|default('UTC') }}", type: 'select' }
      - { question: 'Areas', values: "{{ locale_timezone_continent|default('Etc') }}", type: 'select' }

- name: preconfigure locales
  debconf:
    name: locales
    question: "locales/{{ item.question }}"
    value: "{{ item.values }}"
    vtype: "{{ item.type }}"
  with_items:
      - { question: 'default_environment_locale', values: "{{ locale_default_lang|default('en_US') }}.{{ locale_default_charset|default('UTF-8') }}", type: 'select' }
      - { question: 'locales_to_be_generated', values: "en_US.UTF-8 UTF-8", type: 'multiselect' }

- name: install locales packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - tzdata
    - locales

- name: configure timezone
  template:
    src: timezone.j2
    dest: /etc/timezone
    owner: root
    group: root
    mode: 0644

- name: configure timezone for localtime
  file:
    src: "/usr/share/zoneinfo/{{ locale_timezone_continent|default('Etc') }}/{{ locale_timezone_city|default('UTC') }}"
    dest: /etc/localtime
    owner: root
    group: root
    state: link
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version|version_compare('14.04', '>=')

- name: configure default locale
  template:
    src: locale.j2
    dest: /etc/default/locale
    owner: root
    group: root
    mode: 0644

- name: generate locales
  locale_gen:
    name: "{{ item.lang }}.{{ item.charset }}"
    state: present
  with_items: "{{ locale_generate }}"

- name: reconfigure locales packages
  command: dpkg-reconfigure --frontend noninteractive {{ item }}
  with_items:
    - tzdata
    - locales

- name: configure system bashrc
  lineinfile:
    dest: /etc/bash.bashrc
    state: present
    regexp: "export {{ item.key|upper }}: .*"
    line: "export {{ item.key|upper }}='{{ item.value }}'"
  with_dict: "{{ locale_env }}"
  when: item.value is not none and item.value != ''

- name: reconfigure default keyboard layout
  lineinfile:
    dest: /etc/default/keyboard
    state: present
    regexp: 'XKBLAYOUT.*'
    line: 'XKBLAYOUT="{{ keyboard_layout_code }}"'
  when: keyboard_layout_reconfigure
