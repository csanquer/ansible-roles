---
# remove all keys and add the new keys
# merge account_authorized_keys and account_default_authorized_keys values
- name: Set up SSH authorized_keys
  authorized_key:
    user: "{{ item.key }}"
    key: "{% for sshkey in ((account_default_authorized_keys[item.key] | default([])) + (item.value | default([])) )  | unique | sort %}{{ sshkey }}{% if not loop.last %}{{ '\n' }}{% endif %}{% endfor %}"
    state: present
    exclusive: true
  with_dict: "{{ account_authorized_keys }}"

- name: Set up SSH authorized_keys from URL
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
    state: present
  with_subelements:
    - "{{ account_url_authorized_keys }}"
    - urls

- name: create ssh keys directory for keys to copy
  file:
    path: "{{ (item.value.file|default('/home/' ~ item.key ~ '/.ssh/id_rsa'))|dirname }}"
    state: directory
    mode: 'u=rwX,g=r,o='
    owner: "{{ item.value.owner|default(item.key) }}"
    group: "{{ item.value.group|default(item.key) }}"
  with_dict: "{{ account_ssh_keys_pairs }}"

- name: copy ssh public keys
  copy:
    content: '{{ item.value.public|trim }}'
    dest: "{{ (item.value.file|default('/home/' ~ item.key ~ '/.ssh/id_rsa')) ~ '.pub' }}"
    owner: "{{ item.value.owner|default(item.key) }}"
    group: "{{ item.value.group|default(item.key) }}"
    mode: 'u=rw,g=r,o='
    backup: no
    force: yes
  with_dict: "{{ account_ssh_keys_pairs }}"

- name: copy ssh private keys
  copy:
    content: '{{ item.value.private|trim ~ "\n" }}'
    dest: "{{ (item.value.file|default('/home/' ~ item.key ~ '/.ssh/id_rsa')) }}"
    owner: "{{ item.value.owner|default(item.key) }}"
    group: "{{ item.value.group|default(item.key) }}"
    mode: 'u=rw,g=,o='
    backup: no
    force: yes
  with_dict: "{{ account_ssh_keys_pairs }}"
