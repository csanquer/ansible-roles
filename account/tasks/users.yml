---
# create or update a user
- name: create users
  user:
    name: "{{ item.value.name }}"
    comment: "{{ item.value.comment | default(item.value.name) }}"
    shell: "{{ item.value.shell | default('/bin/bash') }}"
    system: "{{ item.value.system | default('no') }}"
    groups: "{{ item.value.groups | default([]) | join(',') }}"
    home: "{{ item.value.home|default(omit) }}"
    uid: "{{ item.value.uid|default(omit) }}"
    group: "{{ item.value.group|default(omit) }}"
  with_dict: "{{ account_users }}"

# add a ! at the beginning of hashed password to lock it
- name: set user password
  user: 
    name: "{{ item.value.name }}"
    password: "{{ ('!' if item.value.lock|default(false) else '' ) ~ (account_user_passwords[item.value.name] |password_hash('sha512', item.value.salt|default(None))) }}"
  when: not item.value.no_password|default(false)
  with_dict: "{{ account_users }}"

- name: chmod homes
  file:
    path: "{{ (item.value.home|default('/home/' ~ item.value.name )) }}"
    mode: "{{ item.value.home_mode|default('u=rwx,g=rx,o=rx') }}"
    owner: "{{ item.value.home_owner|default(item.key) }}"
    group: "{{ item.value.home_group|default(item.key) }}"
    state: directory
  when: not item.value.no_chown_home|default(false)
  with_dict: "{{ account_users }}"

- name: copy home config files
  template:
    src: "{{ item.1.src }}"
    dest: "{{ item.0.home|default('/home/' ~ item.0.name) }}/{{ item.1.dest|default('') }}"
    owner: "{{ item.1.owner|default(item.0.name) }}"
    group: "{{ item.1.group|default(item.0.name) }}"
    mode: "{{ item.1.mode|default('u=rw,g=r,o=r') }}"
    backup: "{{ item.1.backup|default('yes') }}"
    force: "{{ item.1.force|default('no') }}"
  with_subelements:
    - "{{ account_users }}"
    - config_files
    - { skip_missing: True }
  when: item.1.file is not none

- name: configure custom environment variable
  lineinfile:
    dest: "{{ account_users[item.key]['home']|default('/home/' ~ item.key) }}/{{ item.value.shellrc|default('.bashrc') }}"
    state: present
    regexp: 'export {{ item.value.key }}=.*'
    line: 'export {{ item.value.key }}={{ item.value.option }}'
  with_dict: "{{ account_env_vars }}"

- name: set git configuration
  git_config: 
    name: "{{ item.1.name }}"
    value: "{{ item.1.option }}"
    scope: global 
  become: true
  become_user:  "{{ item.0.name }}"
  with_subelements:
    - "{{ account_users }}"
    - gitconfig
    - { skip_missing: True }
