# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

force_color_prompt={{ 'yes' if (item.0.color_prompt|default(true)|bool) else ''}}

if [ "$force_color_prompt" = yes ]; then
   if [ $UID -eq 0 ]; then
       PS1='\[\033[01;31m\]\u\[\033[01;37m\]@\[\033[01;32m\]\h\[\033[01;37m\]:\[\033[01;34m\]\w\[\033[01;31m\]$\[\033[00m\] '
   else
       PS1='\[\033[01;36m\]\u\[\033[01;37m\]@\[\033[01;32m\]\h\[\033[01;37m\]\[\033[01;37m\]:\[\033[01;34m\]\w\[\033[01;36m\] \$\[\033[00m\] '
   fi
else
   PS1='\u@\h:\w\$ '
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# gitprompt configuration
GIT_PROMPT_ONLY_IN_REPO=1
# GIT_PROMPT_FETCH_REMOTE_STATUS=0   # uncomment to avoid fetching remote status
# GIT_PROMPT_SHOW_UPSTREAM=1 # uncomment to show upstream tracking branch
# GIT_PROMPT_SHOW_UNTRACKED_FILES=all # can be no, normal or all; determines counting of untracked files

# GIT_PROMPT_SHOW_CHANGED_FILES_COUNT=0 # uncomment to avoid printing the number of changed files

# GIT_PROMPT_STATUS_COMMAND=gitstatus_pre-1.7.10.sh # uncomment to support Git older than 1.7.10

# GIT_PROMPT_START=...    # uncomment for custom prompt start sequence
# GIT_PROMPT_END=...      # uncomment for custom prompt end sequence

# as last entry source the gitprompt script
GIT_PROMPT_THEME=Custom # use custom theme specified in file GIT_PROMPT_THEME_FILE (default ~/.git-prompt-colors.sh)
# GIT_PROMPT_THEME_FILE=~/.git-prompt-colors.sh
# GIT_PROMPT_THEME=Solarized # use theme optimized for solarized color scheme
source /opt/bash-git-prompt/gitprompt.sh

# SSH Agent auto start on session opening
# set to yes to enable
ssh_agent_autostart={{ 'yes' if (item.0.ssh_agent_autostart|default(false)|bool) else ''}}

if [ "$ssh_agent_autostart" = yes ]; then
    SSH_ENV="$HOME/.ssh/environment"

    function start_agent {
         echo "Initialising new SSH agent..."
         /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
         echo succeeded
         chmod 600 "${SSH_ENV}"
         . "${SSH_ENV}" > /dev/null
         /usr/bin/ssh-add;
    }

    # Source SSH settings, if applicable
    if [ -f "${SSH_ENV}" ]; then
         . "${SSH_ENV}" > /dev/null
         #ps ${SSH_AGENT_PID} doesn't work under cywgin
         ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
             start_agent;
         }
    else
         start_agent;
    fi
fi

{% if item.0.name is defined %}
# environment variables
{%   for key,value in (account_env_vars[item.0.name]|default({})).iteritems() %}
export {{ key|upper }}="{{ value }}"
{%   endfor %}
{% endif %}
